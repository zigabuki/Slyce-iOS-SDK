{"name":"Slyce-ios-sdk","tagline":"Demo","body":"Slyce iOS SDK\r\n==============\r\n\r\nThe Slyce iOS SDK makes it easy to add visual search capabilities to mobile apps.\r\n\r\n## Contents\r\n\r\n- [Use Cases](#use-cases)\r\n- [Requirements](#requirements)\r\n- [Add the SDK to Your Project](#add-the-sdk-to-your-project)\r\n- [Credentials](#credentials)\r\n- [Documentation](#documentation)\r\n\r\n\r\n## Use Cases\r\n\r\nThe SDK enables 3 major modes of operation: **Headless**, **Headless/Camera**, **Full UI**.\r\n\r\n### Headless\r\n\r\nSDK provides the methods required to submit images and receive results. \r\nIdeal for cases where the app already handles the camera and has its own UI.\r\n\r\n### Headless/Camera\r\n\r\nA headless mode where the SDK manages the camera. **App developers are responsible to implement their own UI.** \r\nIdeal for cases where app developers would like to utilize SDK features such as continues barcodes detection, yet would like to maintain full flexibility with anything related to the UI/UX.\r\n\r\n### Full UI\r\n\r\nThe SDK takes care of the entire flow from scanning to getting results. The SDK provides a UI that can be customized. Provides a turnkey scan-to-products solution.\r\n\r\n\r\n## Requirements\r\n\r\n* An iOS development environment including Xcode 5.0 or above and iOS SDK 7.0 or above\r\n* An iPhone/iPad running iOS 7.0 or above (you cannot use the iOS Simulator when using the Headless/Camera or Full UI Mode, as the Simulator cannot produce video frames)\r\n* A Slyce client ID\r\n\r\n\r\n## Add the SDK to Your Project\r\n\r\n### If you use [CocoaPods](http://cocoapods.org), then add these lines to your podfile:\r\n\r\n```ruby\r\nplatform :ios, '7.0'\r\npod 'Slyce-iOS-SDK'\r\n```\r\n\r\n### If you don't use CocoaPods, then:\r\n\r\n1. Clone or download the SDK, which consists of a framework, resources bundle, API docs, SDK Overview PDF and release notes. It also includes a sample app.\r\n2. Drag and the drop the `SlyceSDK.framework` to the app’s project (make sure you copy the framework to the project).\r\n3. If you plan to use the Full UI mode, drag and the drop the `SlyceSDK.bundle` to the app’s project (make sure you copy the bundle to the project).\r\n3. In your project's **Build Settings** (in the `TARGETS` section, not the `PROJECTS` section):\r\n  * add `-ObjC` to `Other Linker Flags`\r\n4. In your project's **Build Phases**, link your project with the following library:\r\n  * `libicucore.dylib`\r\n5. To start working, import `<SlyceSDK/SlyceSDK.h>` in order to import all the public headers.\r\n\r\n\r\n## Credentials\r\n\r\nYour mobile integration requires a `client_id`.\r\n\r\nYou can obtain these Slyce API credentials by visiting the [Products Services page on Slyce site](http://slyce.it/products-services) or via a Slyce representative.\r\n\r\nAfter you obtain one, you should use it when initializing the central `SFSlyce` object when using of the SDK modes.\r\n\r\n\r\n## Documentation\r\n\r\n* These docs in the SDK, which include an overview of usage (PDF), API Reference (appledoc format), and sample code.\r\n* The sample app included in this SDK.\r\n* Header files are thoroughly documented; refer to them as needed for extra details about any given property or parameter.\r\n\r\n[Reference](https://github.com/Slyce-Inc/Slyce-iOS-SDK/blob/master/com.slyce.SlyceSDK.docset/Contents/Resources/Documents/index.html)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}